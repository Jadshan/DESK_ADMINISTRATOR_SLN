@page "/identity/account/register"
<div class="container">
	<div class="row">
		<div class="col-lg-6">
			<EditForm Enhance Model="User" OnValidSubmit="HandleRegistration">
				<DataAnnotationsValidator />
				<ValidationSummary />
				<div class="card">
					<div class="card-header"> Register</div>
					<div class="card-body">
						<div class="form-group">
							<label class="form-label">Fullname</label>
							<InputText @bind-Value="User.FullName" class="form-control"></InputText>
						</div>
						<div class="form-group">
							<label class="form-label">Username</label>
							<InputText @bind-Value="User.UserName" class="form-control"></InputText>
						</div>
						<div class="form-group mt-3">
							<label class="form-label">Email</label>
							<InputText @bind-Value="User.EmailAddress" class="form-control"></InputText>
						</div>
						<div class="form-group mt-3">
							<label class="form-label">Password</label>
							<input type="password" @bind="User.Password" class="form-control"></input>
						</div>
						<div class="form-group mt-3">
							<label class="form-label">Confirm Password</label>
							<input type="password" @bind="User.ConfirmPassword" class="form-control"></input>
						</div>
						<div class="form-group mt-3">
							<button class="btn btn-outline-primary float-end" type="submit">Register</button>
						</div>
					</div>
				</div>
			</EditForm>
		</div>
	</div>
</div>

@code {
	RegisterDTO User = new();
	async Task HandleRegistration()
	{
		var result = await accountService.CreateAsync(User);
		if (result.Flag)
		{
			User = new();
		}
		else
		{

		}
	}
}
